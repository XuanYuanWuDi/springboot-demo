<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.server.provider.mapper.CityMapper">
  <resultMap id="BaseResultMap" type="com.injured.server.api.entity.City">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="no_income_fee" jdbcType="DECIMAL" property="noIncomeFee" />
    <result column="no_fixed_income_fee" jdbcType="DECIMAL" property="noFixedIncomeFee" />
    <result column="fixed_income_fee" jdbcType="DECIMAL" property="fixedIncomeFee" />
    <result column="nursing_fee" jdbcType="DECIMAL" property="nursingFee" />
    <result column="nutrition_fee" jdbcType="DECIMAL" property="nutritionFee" />
    <result column="traffic_fee" jdbcType="DECIMAL" property="trafficFee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cname, pid, no_income_fee, no_fixed_income_fee, fixed_income_fee, nursing_fee, 
    nutrition_fee, traffic_fee
  </sql>
  <select id="selectByExample" parameterType="com.injured.server.api.entity.CityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from city
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from city
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.server.api.entity.CityExample">
    delete from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.server.api.entity.City">
    insert into city (id, cname, pid, 
      no_income_fee, no_fixed_income_fee, fixed_income_fee, 
      nursing_fee, nutrition_fee, traffic_fee
      )
    values (#{id,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, 
      #{noIncomeFee,jdbcType=DECIMAL}, #{noFixedIncomeFee,jdbcType=DECIMAL}, #{fixedIncomeFee,jdbcType=DECIMAL}, 
      #{nursingFee,jdbcType=DECIMAL}, #{nutritionFee,jdbcType=DECIMAL}, #{trafficFee,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.injured.server.api.entity.City">
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="noIncomeFee != null">
        no_income_fee,
      </if>
      <if test="noFixedIncomeFee != null">
        no_fixed_income_fee,
      </if>
      <if test="fixedIncomeFee != null">
        fixed_income_fee,
      </if>
      <if test="nursingFee != null">
        nursing_fee,
      </if>
      <if test="nutritionFee != null">
        nutrition_fee,
      </if>
      <if test="trafficFee != null">
        traffic_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="noIncomeFee != null">
        #{noIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="noFixedIncomeFee != null">
        #{noFixedIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="fixedIncomeFee != null">
        #{fixedIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="nursingFee != null">
        #{nursingFee,jdbcType=DECIMAL},
      </if>
      <if test="nutritionFee != null">
        #{nutritionFee,jdbcType=DECIMAL},
      </if>
      <if test="trafficFee != null">
        #{trafficFee,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.server.api.entity.CityExample" resultType="java.lang.Long">
    select count(*) from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update city
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.noIncomeFee != null">
        no_income_fee = #{record.noIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="record.noFixedIncomeFee != null">
        no_fixed_income_fee = #{record.noFixedIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="record.fixedIncomeFee != null">
        fixed_income_fee = #{record.fixedIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="record.nursingFee != null">
        nursing_fee = #{record.nursingFee,jdbcType=DECIMAL},
      </if>
      <if test="record.nutritionFee != null">
        nutrition_fee = #{record.nutritionFee,jdbcType=DECIMAL},
      </if>
      <if test="record.trafficFee != null">
        traffic_fee = #{record.trafficFee,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update city
    set id = #{record.id,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      no_income_fee = #{record.noIncomeFee,jdbcType=DECIMAL},
      no_fixed_income_fee = #{record.noFixedIncomeFee,jdbcType=DECIMAL},
      fixed_income_fee = #{record.fixedIncomeFee,jdbcType=DECIMAL},
      nursing_fee = #{record.nursingFee,jdbcType=DECIMAL},
      nutrition_fee = #{record.nutritionFee,jdbcType=DECIMAL},
      traffic_fee = #{record.trafficFee,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.server.api.entity.City">
    update city
    <set>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="noIncomeFee != null">
        no_income_fee = #{noIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="noFixedIncomeFee != null">
        no_fixed_income_fee = #{noFixedIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="fixedIncomeFee != null">
        fixed_income_fee = #{fixedIncomeFee,jdbcType=DECIMAL},
      </if>
      <if test="nursingFee != null">
        nursing_fee = #{nursingFee,jdbcType=DECIMAL},
      </if>
      <if test="nutritionFee != null">
        nutrition_fee = #{nutritionFee,jdbcType=DECIMAL},
      </if>
      <if test="trafficFee != null">
        traffic_fee = #{trafficFee,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.server.api.entity.City">
    update city
    set cname = #{cname,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      no_income_fee = #{noIncomeFee,jdbcType=DECIMAL},
      no_fixed_income_fee = #{noFixedIncomeFee,jdbcType=DECIMAL},
      fixed_income_fee = #{fixedIncomeFee,jdbcType=DECIMAL},
      nursing_fee = #{nursingFee,jdbcType=DECIMAL},
      nutrition_fee = #{nutritionFee,jdbcType=DECIMAL},
      traffic_fee = #{trafficFee,jdbcType=DECIMAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from city
  </select>
  <select id="selectProvinceCitys" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from city where id like '%00'
  </select>
  <select id="selectProvince" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from city
    where pid = #{pid,jdbcType=VARCHAR}
  </select>
</mapper>