<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.server.provider.mapper.InjuredFixedOpinionMapper">
  <resultMap id="BaseResultMap" type="com.injured.server.api.entity.InjuredFixedOpinion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="regist_id" jdbcType="BIGINT" property="registId" />
    <result column="claim_notification_no" jdbcType="VARCHAR" property="claimNotificationNo" />
    <result column="survey_id" jdbcType="BIGINT" property="surveyId" />
    <result column="survey_wou_id" jdbcType="BIGINT" property="surveyWouId" />
    <result column="med_basic_info_id" jdbcType="BIGINT" property="medBasicInfoId" />
    <result column="fixed_damage_id" jdbcType="BIGINT" property="fixedDamageId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="compant_code" jdbcType="VARCHAR" property="compantCode" />
    <result column="nuc_name" jdbcType="VARCHAR" property="nucName" />
    <result column="nuc_no" jdbcType="BIGINT" property="nucNo" />
    <result column="nuc_time" jdbcType="TIMESTAMP" property="nucTime" />
    <result column="nuc_submit_time" jdbcType="TIMESTAMP" property="nucSubmitTime" />
    <result column="nuc_total_amount" jdbcType="DECIMAL" property="nucTotalAmount" />
    <result column="nuc_opinion" jdbcType="VARCHAR" property="nucOpinion" />
    <result column="nuc_desc" jdbcType="VARCHAR" property="nucDesc" />
    <result column="task_type" jdbcType="TINYINT" property="taskType" />
    <result column="task_status" jdbcType="INTEGER" property="taskStatus" />
    <result column="med_type" jdbcType="INTEGER" property="medType" />
    <result column="adjustment_formula" jdbcType="VARCHAR" property="adjustmentFormula" />
    <result column="compensation_amount" jdbcType="DECIMAL" property="compensationAmount" />
    <result column="fix_name" jdbcType="VARCHAR" property="fixName" />
    <result column="fix_no" jdbcType="BIGINT" property="fixNo" />
    <result column="fix_time" jdbcType="TIMESTAMP" property="fixTime" />
    <result column="fix_submit_time" jdbcType="TIMESTAMP" property="fixSubmitTime" />
    <result column="fix_desc" jdbcType="VARCHAR" property="fixDesc" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, regist_id, claim_notification_no, survey_id, survey_wou_id, med_basic_info_id, 
    fixed_damage_id, company_id, compant_code, nuc_name, nuc_no, nuc_time, nuc_submit_time, 
    nuc_total_amount, nuc_opinion, nuc_desc, task_type, task_status, med_type, adjustment_formula, 
    compensation_amount, fix_name, fix_no, fix_time, fix_submit_time, fix_desc, create_time, 
    update_time, is_deleted, remark
  </sql>
  <select id="selectByExample" parameterType="com.injured.server.api.entity.InjuredFixedOpinionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from injured_fixed_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from injured_fixed_opinion
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from injured_fixed_opinion
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.server.api.entity.InjuredFixedOpinionExample">
    delete from injured_fixed_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.server.api.entity.InjuredFixedOpinion">
    insert into injured_fixed_opinion (id, regist_id, claim_notification_no, 
      survey_id, survey_wou_id, med_basic_info_id, 
      fixed_damage_id, company_id, compant_code, 
      nuc_name, nuc_no, nuc_time, 
      nuc_submit_time, nuc_total_amount, nuc_opinion, 
      nuc_desc, task_type, task_status, 
      med_type, adjustment_formula, compensation_amount, 
      fix_name, fix_no, fix_time, 
      fix_submit_time, fix_desc, create_time, 
      update_time, is_deleted, remark
      )
    values (#{id,jdbcType=BIGINT}, #{registId,jdbcType=BIGINT}, #{claimNotificationNo,jdbcType=VARCHAR}, 
      #{surveyId,jdbcType=BIGINT}, #{surveyWouId,jdbcType=BIGINT}, #{medBasicInfoId,jdbcType=BIGINT}, 
      #{fixedDamageId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{compantCode,jdbcType=VARCHAR}, 
      #{nucName,jdbcType=VARCHAR}, #{nucNo,jdbcType=BIGINT}, #{nucTime,jdbcType=TIMESTAMP}, 
      #{nucSubmitTime,jdbcType=TIMESTAMP}, #{nucTotalAmount,jdbcType=DECIMAL}, #{nucOpinion,jdbcType=VARCHAR}, 
      #{nucDesc,jdbcType=VARCHAR}, #{taskType,jdbcType=TINYINT}, #{taskStatus,jdbcType=INTEGER}, 
      #{medType,jdbcType=INTEGER}, #{adjustmentFormula,jdbcType=VARCHAR}, #{compensationAmount,jdbcType=DECIMAL}, 
      #{fixName,jdbcType=VARCHAR}, #{fixNo,jdbcType=BIGINT}, #{fixTime,jdbcType=TIMESTAMP}, 
      #{fixSubmitTime,jdbcType=TIMESTAMP}, #{fixDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.injured.server.api.entity.InjuredFixedOpinion">
    insert into injured_fixed_opinion
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="registId != null">
        regist_id,
      </if>
      <if test="claimNotificationNo != null">
        claim_notification_no,
      </if>
      <if test="surveyId != null">
        survey_id,
      </if>
      <if test="surveyWouId != null">
        survey_wou_id,
      </if>
      <if test="medBasicInfoId != null">
        med_basic_info_id,
      </if>
      <if test="fixedDamageId != null">
        fixed_damage_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="compantCode != null">
        compant_code,
      </if>
      <if test="nucName != null">
        nuc_name,
      </if>
      <if test="nucNo != null">
        nuc_no,
      </if>
      <if test="nucTime != null">
        nuc_time,
      </if>
      <if test="nucSubmitTime != null">
        nuc_submit_time,
      </if>
      <if test="nucTotalAmount != null">
        nuc_total_amount,
      </if>
      <if test="nucOpinion != null">
        nuc_opinion,
      </if>
      <if test="nucDesc != null">
        nuc_desc,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="medType != null">
        med_type,
      </if>
      <if test="adjustmentFormula != null">
        adjustment_formula,
      </if>
      <if test="compensationAmount != null">
        compensation_amount,
      </if>
      <if test="fixName != null">
        fix_name,
      </if>
      <if test="fixNo != null">
        fix_no,
      </if>
      <if test="fixTime != null">
        fix_time,
      </if>
      <if test="fixSubmitTime != null">
        fix_submit_time,
      </if>
      <if test="fixDesc != null">
        fix_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="registId != null">
        #{registId,jdbcType=BIGINT},
      </if>
      <if test="claimNotificationNo != null">
        #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="surveyId != null">
        #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="surveyWouId != null">
        #{surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="medBasicInfoId != null">
        #{medBasicInfoId,jdbcType=BIGINT},
      </if>
      <if test="fixedDamageId != null">
        #{fixedDamageId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="compantCode != null">
        #{compantCode,jdbcType=VARCHAR},
      </if>
      <if test="nucName != null">
        #{nucName,jdbcType=VARCHAR},
      </if>
      <if test="nucNo != null">
        #{nucNo,jdbcType=BIGINT},
      </if>
      <if test="nucTime != null">
        #{nucTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nucSubmitTime != null">
        #{nucSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nucTotalAmount != null">
        #{nucTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="nucOpinion != null">
        #{nucOpinion,jdbcType=VARCHAR},
      </if>
      <if test="nucDesc != null">
        #{nucDesc,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=TINYINT},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="medType != null">
        #{medType,jdbcType=INTEGER},
      </if>
      <if test="adjustmentFormula != null">
        #{adjustmentFormula,jdbcType=VARCHAR},
      </if>
      <if test="compensationAmount != null">
        #{compensationAmount,jdbcType=DECIMAL},
      </if>
      <if test="fixName != null">
        #{fixName,jdbcType=VARCHAR},
      </if>
      <if test="fixNo != null">
        #{fixNo,jdbcType=BIGINT},
      </if>
      <if test="fixTime != null">
        #{fixTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fixSubmitTime != null">
        #{fixSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fixDesc != null">
        #{fixDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.server.api.entity.InjuredFixedOpinionExample" resultType="java.lang.Long">
    select count(*) from injured_fixed_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update injured_fixed_opinion
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.registId != null">
        regist_id = #{record.registId,jdbcType=BIGINT},
      </if>
      <if test="record.claimNotificationNo != null">
        claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.surveyId != null">
        survey_id = #{record.surveyId,jdbcType=BIGINT},
      </if>
      <if test="record.surveyWouId != null">
        survey_wou_id = #{record.surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="record.medBasicInfoId != null">
        med_basic_info_id = #{record.medBasicInfoId,jdbcType=BIGINT},
      </if>
      <if test="record.fixedDamageId != null">
        fixed_damage_id = #{record.fixedDamageId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.compantCode != null">
        compant_code = #{record.compantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nucName != null">
        nuc_name = #{record.nucName,jdbcType=VARCHAR},
      </if>
      <if test="record.nucNo != null">
        nuc_no = #{record.nucNo,jdbcType=BIGINT},
      </if>
      <if test="record.nucTime != null">
        nuc_time = #{record.nucTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nucSubmitTime != null">
        nuc_submit_time = #{record.nucSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nucTotalAmount != null">
        nuc_total_amount = #{record.nucTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.nucOpinion != null">
        nuc_opinion = #{record.nucOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.nucDesc != null">
        nuc_desc = #{record.nucDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.taskType != null">
        task_type = #{record.taskType,jdbcType=TINYINT},
      </if>
      <if test="record.taskStatus != null">
        task_status = #{record.taskStatus,jdbcType=INTEGER},
      </if>
      <if test="record.medType != null">
        med_type = #{record.medType,jdbcType=INTEGER},
      </if>
      <if test="record.adjustmentFormula != null">
        adjustment_formula = #{record.adjustmentFormula,jdbcType=VARCHAR},
      </if>
      <if test="record.compensationAmount != null">
        compensation_amount = #{record.compensationAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.fixName != null">
        fix_name = #{record.fixName,jdbcType=VARCHAR},
      </if>
      <if test="record.fixNo != null">
        fix_no = #{record.fixNo,jdbcType=BIGINT},
      </if>
      <if test="record.fixTime != null">
        fix_time = #{record.fixTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fixSubmitTime != null">
        fix_submit_time = #{record.fixSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fixDesc != null">
        fix_desc = #{record.fixDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update injured_fixed_opinion
    set id = #{record.id,jdbcType=BIGINT},
      regist_id = #{record.registId,jdbcType=BIGINT},
      claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      survey_id = #{record.surveyId,jdbcType=BIGINT},
      survey_wou_id = #{record.surveyWouId,jdbcType=BIGINT},
      med_basic_info_id = #{record.medBasicInfoId,jdbcType=BIGINT},
      fixed_damage_id = #{record.fixedDamageId,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      compant_code = #{record.compantCode,jdbcType=VARCHAR},
      nuc_name = #{record.nucName,jdbcType=VARCHAR},
      nuc_no = #{record.nucNo,jdbcType=BIGINT},
      nuc_time = #{record.nucTime,jdbcType=TIMESTAMP},
      nuc_submit_time = #{record.nucSubmitTime,jdbcType=TIMESTAMP},
      nuc_total_amount = #{record.nucTotalAmount,jdbcType=DECIMAL},
      nuc_opinion = #{record.nucOpinion,jdbcType=VARCHAR},
      nuc_desc = #{record.nucDesc,jdbcType=VARCHAR},
      task_type = #{record.taskType,jdbcType=TINYINT},
      task_status = #{record.taskStatus,jdbcType=INTEGER},
      med_type = #{record.medType,jdbcType=INTEGER},
      adjustment_formula = #{record.adjustmentFormula,jdbcType=VARCHAR},
      compensation_amount = #{record.compensationAmount,jdbcType=DECIMAL},
      fix_name = #{record.fixName,jdbcType=VARCHAR},
      fix_no = #{record.fixNo,jdbcType=BIGINT},
      fix_time = #{record.fixTime,jdbcType=TIMESTAMP},
      fix_submit_time = #{record.fixSubmitTime,jdbcType=TIMESTAMP},
      fix_desc = #{record.fixDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.server.api.entity.InjuredFixedOpinion">
    update injured_fixed_opinion
    <set>
      <if test="registId != null">
        regist_id = #{registId,jdbcType=BIGINT},
      </if>
      <if test="claimNotificationNo != null">
        claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="surveyId != null">
        survey_id = #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="surveyWouId != null">
        survey_wou_id = #{surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="medBasicInfoId != null">
        med_basic_info_id = #{medBasicInfoId,jdbcType=BIGINT},
      </if>
      <if test="fixedDamageId != null">
        fixed_damage_id = #{fixedDamageId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="compantCode != null">
        compant_code = #{compantCode,jdbcType=VARCHAR},
      </if>
      <if test="nucName != null">
        nuc_name = #{nucName,jdbcType=VARCHAR},
      </if>
      <if test="nucNo != null">
        nuc_no = #{nucNo,jdbcType=BIGINT},
      </if>
      <if test="nucTime != null">
        nuc_time = #{nucTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nucSubmitTime != null">
        nuc_submit_time = #{nucSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nucTotalAmount != null">
        nuc_total_amount = #{nucTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="nucOpinion != null">
        nuc_opinion = #{nucOpinion,jdbcType=VARCHAR},
      </if>
      <if test="nucDesc != null">
        nuc_desc = #{nucDesc,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=TINYINT},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="medType != null">
        med_type = #{medType,jdbcType=INTEGER},
      </if>
      <if test="adjustmentFormula != null">
        adjustment_formula = #{adjustmentFormula,jdbcType=VARCHAR},
      </if>
      <if test="compensationAmount != null">
        compensation_amount = #{compensationAmount,jdbcType=DECIMAL},
      </if>
      <if test="fixName != null">
        fix_name = #{fixName,jdbcType=VARCHAR},
      </if>
      <if test="fixNo != null">
        fix_no = #{fixNo,jdbcType=BIGINT},
      </if>
      <if test="fixTime != null">
        fix_time = #{fixTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fixSubmitTime != null">
        fix_submit_time = #{fixSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fixDesc != null">
        fix_desc = #{fixDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.server.api.entity.InjuredFixedOpinion">
    update injured_fixed_opinion
    set regist_id = #{registId,jdbcType=BIGINT},
      claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      survey_id = #{surveyId,jdbcType=BIGINT},
      survey_wou_id = #{surveyWouId,jdbcType=BIGINT},
      med_basic_info_id = #{medBasicInfoId,jdbcType=BIGINT},
      fixed_damage_id = #{fixedDamageId,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      compant_code = #{compantCode,jdbcType=VARCHAR},
      nuc_name = #{nucName,jdbcType=VARCHAR},
      nuc_no = #{nucNo,jdbcType=BIGINT},
      nuc_time = #{nucTime,jdbcType=TIMESTAMP},
      nuc_submit_time = #{nucSubmitTime,jdbcType=TIMESTAMP},
      nuc_total_amount = #{nucTotalAmount,jdbcType=DECIMAL},
      nuc_opinion = #{nucOpinion,jdbcType=VARCHAR},
      nuc_desc = #{nucDesc,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=TINYINT},
      task_status = #{taskStatus,jdbcType=INTEGER},
      med_type = #{medType,jdbcType=INTEGER},
      adjustment_formula = #{adjustmentFormula,jdbcType=VARCHAR},
      compensation_amount = #{compensationAmount,jdbcType=DECIMAL},
      fix_name = #{fixName,jdbcType=VARCHAR},
      fix_no = #{fixNo,jdbcType=BIGINT},
      fix_time = #{fixTime,jdbcType=TIMESTAMP},
      fix_submit_time = #{fixSubmitTime,jdbcType=TIMESTAMP},
      fix_desc = #{fixDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>