<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.server.provider.mapper.CeInsuranceSpecialMapper">
  <resultMap id="BaseResultMap" type="com.injured.server.api.entity.CeInsuranceSpecial">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="regist_id" jdbcType="BIGINT" property="registId" />
    <result column="insurance_id" jdbcType="BIGINT" property="insuranceId" />
    <result column="order" jdbcType="VARCHAR" property="order" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, regist_id, insurance_id, `order`, content
  </sql>
  <select id="selectByExample" parameterType="com.injured.server.api.entity.CeInsuranceSpecialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ce_insurance_special
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ce_insurance_special
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ce_insurance_special
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.server.api.entity.CeInsuranceSpecialExample">
    delete from ce_insurance_special
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.server.api.entity.CeInsuranceSpecial" useGeneratedKeys="true" keyProperty="id">
    insert into ce_insurance_special (id, regist_id, insurance_id, 
      `order`, content)
    values (#{id,jdbcType=BIGINT}, #{registId,jdbcType=BIGINT}, #{insuranceId,jdbcType=BIGINT}, 
      #{order,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.injured.server.api.entity.CeInsuranceSpecial" useGeneratedKeys="true" keyProperty="id">
    insert into ce_insurance_special
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="registId != null">
        regist_id,
      </if>
      <if test="insuranceId != null">
        insurance_id,
      </if>
      <if test="order != null">
        `order`,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="registId != null">
        #{registId,jdbcType=BIGINT},
      </if>
      <if test="insuranceId != null">
        #{insuranceId,jdbcType=BIGINT},
      </if>
      <if test="order != null">
        #{order,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.server.api.entity.CeInsuranceSpecialExample" resultType="java.lang.Long">
    select count(*) from ce_insurance_special
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ce_insurance_special
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.registId != null">
        regist_id = #{record.registId,jdbcType=BIGINT},
      </if>
      <if test="record.insuranceId != null">
        insurance_id = #{record.insuranceId,jdbcType=BIGINT},
      </if>
      <if test="record.order != null">
        `order` = #{record.order,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ce_insurance_special
    set id = #{record.id,jdbcType=BIGINT},
      regist_id = #{record.registId,jdbcType=BIGINT},
      insurance_id = #{record.insuranceId,jdbcType=BIGINT},
      `order` = #{record.order,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.server.api.entity.CeInsuranceSpecial">
    update ce_insurance_special
    <set>
      <if test="registId != null">
        regist_id = #{registId,jdbcType=BIGINT},
      </if>
      <if test="insuranceId != null">
        insurance_id = #{insuranceId,jdbcType=BIGINT},
      </if>
      <if test="order != null">
        `order` = #{order,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.server.api.entity.CeInsuranceSpecial">
    update ce_insurance_special
    set regist_id = #{registId,jdbcType=BIGINT},
      insurance_id = #{insuranceId,jdbcType=BIGINT},
      `order` = #{order,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByBatchInstanceId" parameterType="java.util.List" resultMap="BaseResultMap">
    select *
    from ce_insurance_special
    where insurance_id in
    <foreach collection="list"  item="item" index="index" separator="," open="(" close=")">
      #{item,jdbcType=BIGINT}
    </foreach>
  </select>
</mapper>