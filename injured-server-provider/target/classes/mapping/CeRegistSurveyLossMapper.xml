<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.server.provider.mapper.CeRegistSurveyLossMapper">
  <resultMap id="BaseResultMap" type="com.injured.server.api.entity.CeRegistSurveyLoss">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="regist_id" jdbcType="BIGINT" property="registId" />
    <result column="claim_notification_no" jdbcType="VARCHAR" property="claimNotificationNo" />
    <result column="loss_name" jdbcType="VARCHAR" property="lossName" />
    <result column="new_old_degree" jdbcType="VARCHAR" property="newOldDegree" />
    <result column="loss_scope" jdbcType="VARCHAR" property="lossScope" />
    <result column="loss_desc" jdbcType="VARCHAR" property="lossDesc" />
    <result column="is_rescue" jdbcType="VARCHAR" property="isRescue" />
    <result column="contact_person" jdbcType="VARCHAR" property="contactPerson" />
    <result column="contact_tel" jdbcType="VARCHAR" property="contactTel" />
    <result column="estimated_loss_amount" jdbcType="DECIMAL" property="estimatedLossAmount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, regist_id, claim_notification_no, loss_name, new_old_degree, loss_scope, loss_desc, 
    is_rescue, contact_person, contact_tel, estimated_loss_amount, remark, update_time, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.injured.server.api.entity.CeRegistSurveyLossExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ce_regist_survey_loss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ce_regist_survey_loss
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ce_regist_survey_loss
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.server.api.entity.CeRegistSurveyLossExample">
    delete from ce_regist_survey_loss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.server.api.entity.CeRegistSurveyLoss" useGeneratedKeys="true" keyProperty="id">
    insert into ce_regist_survey_loss (id, regist_id, claim_notification_no, 
      loss_name, new_old_degree, loss_scope, 
      loss_desc, is_rescue, contact_person, 
      contact_tel, estimated_loss_amount, remark, 
      update_time, create_time)
    values (#{id,jdbcType=BIGINT}, #{registId,jdbcType=BIGINT}, #{claimNotificationNo,jdbcType=VARCHAR}, 
      #{lossName,jdbcType=VARCHAR}, #{newOldDegree,jdbcType=VARCHAR}, #{lossScope,jdbcType=VARCHAR}, 
      #{lossDesc,jdbcType=VARCHAR}, #{isRescue,jdbcType=VARCHAR}, #{contactPerson,jdbcType=VARCHAR}, 
      #{contactTel,jdbcType=VARCHAR}, #{estimatedLossAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.injured.server.api.entity.CeRegistSurveyLoss" useGeneratedKeys="true" keyProperty="id">
    insert into ce_regist_survey_loss
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="registId != null">
        regist_id,
      </if>
      <if test="claimNotificationNo != null">
        claim_notification_no,
      </if>
      <if test="lossName != null">
        loss_name,
      </if>
      <if test="newOldDegree != null">
        new_old_degree,
      </if>
      <if test="lossScope != null">
        loss_scope,
      </if>
      <if test="lossDesc != null">
        loss_desc,
      </if>
      <if test="isRescue != null">
        is_rescue,
      </if>
      <if test="contactPerson != null">
        contact_person,
      </if>
      <if test="contactTel != null">
        contact_tel,
      </if>
      <if test="estimatedLossAmount != null">
        estimated_loss_amount,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="registId != null">
        #{registId,jdbcType=BIGINT},
      </if>
      <if test="claimNotificationNo != null">
        #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="lossName != null">
        #{lossName,jdbcType=VARCHAR},
      </if>
      <if test="newOldDegree != null">
        #{newOldDegree,jdbcType=VARCHAR},
      </if>
      <if test="lossScope != null">
        #{lossScope,jdbcType=VARCHAR},
      </if>
      <if test="lossDesc != null">
        #{lossDesc,jdbcType=VARCHAR},
      </if>
      <if test="isRescue != null">
        #{isRescue,jdbcType=VARCHAR},
      </if>
      <if test="contactPerson != null">
        #{contactPerson,jdbcType=VARCHAR},
      </if>
      <if test="contactTel != null">
        #{contactTel,jdbcType=VARCHAR},
      </if>
      <if test="estimatedLossAmount != null">
        #{estimatedLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.server.api.entity.CeRegistSurveyLossExample" resultType="java.lang.Long">
    select count(*) from ce_regist_survey_loss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ce_regist_survey_loss
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.registId != null">
        regist_id = #{record.registId,jdbcType=BIGINT},
      </if>
      <if test="record.claimNotificationNo != null">
        claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.lossName != null">
        loss_name = #{record.lossName,jdbcType=VARCHAR},
      </if>
      <if test="record.newOldDegree != null">
        new_old_degree = #{record.newOldDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.lossScope != null">
        loss_scope = #{record.lossScope,jdbcType=VARCHAR},
      </if>
      <if test="record.lossDesc != null">
        loss_desc = #{record.lossDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.isRescue != null">
        is_rescue = #{record.isRescue,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPerson != null">
        contact_person = #{record.contactPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.contactTel != null">
        contact_tel = #{record.contactTel,jdbcType=VARCHAR},
      </if>
      <if test="record.estimatedLossAmount != null">
        estimated_loss_amount = #{record.estimatedLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ce_regist_survey_loss
    set id = #{record.id,jdbcType=BIGINT},
      regist_id = #{record.registId,jdbcType=BIGINT},
      claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      loss_name = #{record.lossName,jdbcType=VARCHAR},
      new_old_degree = #{record.newOldDegree,jdbcType=VARCHAR},
      loss_scope = #{record.lossScope,jdbcType=VARCHAR},
      loss_desc = #{record.lossDesc,jdbcType=VARCHAR},
      is_rescue = #{record.isRescue,jdbcType=VARCHAR},
      contact_person = #{record.contactPerson,jdbcType=VARCHAR},
      contact_tel = #{record.contactTel,jdbcType=VARCHAR},
      estimated_loss_amount = #{record.estimatedLossAmount,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.server.api.entity.CeRegistSurveyLoss">
    update ce_regist_survey_loss
    <set>
      <if test="registId != null">
        regist_id = #{registId,jdbcType=BIGINT},
      </if>
      <if test="claimNotificationNo != null">
        claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="lossName != null">
        loss_name = #{lossName,jdbcType=VARCHAR},
      </if>
      <if test="newOldDegree != null">
        new_old_degree = #{newOldDegree,jdbcType=VARCHAR},
      </if>
      <if test="lossScope != null">
        loss_scope = #{lossScope,jdbcType=VARCHAR},
      </if>
      <if test="lossDesc != null">
        loss_desc = #{lossDesc,jdbcType=VARCHAR},
      </if>
      <if test="isRescue != null">
        is_rescue = #{isRescue,jdbcType=VARCHAR},
      </if>
      <if test="contactPerson != null">
        contact_person = #{contactPerson,jdbcType=VARCHAR},
      </if>
      <if test="contactTel != null">
        contact_tel = #{contactTel,jdbcType=VARCHAR},
      </if>
      <if test="estimatedLossAmount != null">
        estimated_loss_amount = #{estimatedLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.server.api.entity.CeRegistSurveyLoss">
    update ce_regist_survey_loss
    set regist_id = #{registId,jdbcType=BIGINT},
      claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      loss_name = #{lossName,jdbcType=VARCHAR},
      new_old_degree = #{newOldDegree,jdbcType=VARCHAR},
      loss_scope = #{lossScope,jdbcType=VARCHAR},
      loss_desc = #{lossDesc,jdbcType=VARCHAR},
      is_rescue = #{isRescue,jdbcType=VARCHAR},
      contact_person = #{contactPerson,jdbcType=VARCHAR},
      contact_tel = #{contactTel,jdbcType=VARCHAR},
      estimated_loss_amount = #{estimatedLossAmount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>