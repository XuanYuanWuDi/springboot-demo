<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.server.provider.mapper.CeInsuranceItemMapper">
  <resultMap id="BaseResultMap" type="com.injured.server.api.entity.CeInsuranceItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="regist_id" jdbcType="BIGINT" property="registId" />
    <result column="insurance_id" jdbcType="BIGINT" property="insuranceId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="insurance_amout" jdbcType="DECIMAL" property="insuranceAmout" />
    <result column="unit_count" jdbcType="INTEGER" property="unitCount" />
    <result column="unit_amount" jdbcType="DECIMAL" property="unitAmount" />
    <result column="non_deductible" jdbcType="VARCHAR" property="nonDeductible" />
    <result column="deductible_rate" jdbcType="DECIMAL" property="deductibleRate" />
    <result column="deductible_money" jdbcType="DECIMAL" property="deductibleMoney" />
    <result column="insurance_fee" jdbcType="DECIMAL" property="insuranceFee" />
    <result column="premiums" jdbcType="DECIMAL" property="premiums" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="ext" jdbcType="VARCHAR" property="ext" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, regist_id, insurance_id, code, name, insurance_amout, unit_count, unit_amount, 
    non_deductible, deductible_rate, deductible_money, insurance_fee, premiums, remark, 
    is_delete, ext, update_time, create_time
  </sql>
  <select id="selectByExample" parameterType="com.injured.server.api.entity.CeInsuranceItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ce_insurance_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ce_insurance_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ce_insurance_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.server.api.entity.CeInsuranceItemExample">
    delete from ce_insurance_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.server.api.entity.CeInsuranceItem" useGeneratedKeys="true" keyProperty="id">
    insert into ce_insurance_item (id, regist_id, insurance_id, 
      code, name, insurance_amout, 
      unit_count, unit_amount, non_deductible, 
      deductible_rate, deductible_money, insurance_fee, 
      premiums, remark, is_delete, 
      ext, update_time, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{registId,jdbcType=BIGINT}, #{insuranceId,jdbcType=BIGINT}, 
      #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{insuranceAmout,jdbcType=DECIMAL}, 
      #{unitCount,jdbcType=INTEGER}, #{unitAmount,jdbcType=DECIMAL}, #{nonDeductible,jdbcType=VARCHAR}, 
      #{deductibleRate,jdbcType=DECIMAL}, #{deductibleMoney,jdbcType=DECIMAL}, #{insuranceFee,jdbcType=DECIMAL}, 
      #{premiums,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIT}, 
      #{ext,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.injured.server.api.entity.CeInsuranceItem" useGeneratedKeys="true" keyProperty="id">
    insert into ce_insurance_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="registId != null">
        regist_id,
      </if>
      <if test="insuranceId != null">
        insurance_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="insuranceAmout != null">
        insurance_amout,
      </if>
      <if test="unitCount != null">
        unit_count,
      </if>
      <if test="unitAmount != null">
        unit_amount,
      </if>
      <if test="nonDeductible != null">
        non_deductible,
      </if>
      <if test="deductibleRate != null">
        deductible_rate,
      </if>
      <if test="deductibleMoney != null">
        deductible_money,
      </if>
      <if test="insuranceFee != null">
        insurance_fee,
      </if>
      <if test="premiums != null">
        premiums,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="ext != null">
        ext,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="registId != null">
        #{registId,jdbcType=BIGINT},
      </if>
      <if test="insuranceId != null">
        #{insuranceId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="insuranceAmout != null">
        #{insuranceAmout,jdbcType=DECIMAL},
      </if>
      <if test="unitCount != null">
        #{unitCount,jdbcType=INTEGER},
      </if>
      <if test="unitAmount != null">
        #{unitAmount,jdbcType=DECIMAL},
      </if>
      <if test="nonDeductible != null">
        #{nonDeductible,jdbcType=VARCHAR},
      </if>
      <if test="deductibleRate != null">
        #{deductibleRate,jdbcType=DECIMAL},
      </if>
      <if test="deductibleMoney != null">
        #{deductibleMoney,jdbcType=DECIMAL},
      </if>
      <if test="insuranceFee != null">
        #{insuranceFee,jdbcType=DECIMAL},
      </if>
      <if test="premiums != null">
        #{premiums,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.server.api.entity.CeInsuranceItemExample" resultType="java.lang.Long">
    select count(*) from ce_insurance_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ce_insurance_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.registId != null">
        regist_id = #{record.registId,jdbcType=BIGINT},
      </if>
      <if test="record.insuranceId != null">
        insurance_id = #{record.insuranceId,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.insuranceAmout != null">
        insurance_amout = #{record.insuranceAmout,jdbcType=DECIMAL},
      </if>
      <if test="record.unitCount != null">
        unit_count = #{record.unitCount,jdbcType=INTEGER},
      </if>
      <if test="record.unitAmount != null">
        unit_amount = #{record.unitAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.nonDeductible != null">
        non_deductible = #{record.nonDeductible,jdbcType=VARCHAR},
      </if>
      <if test="record.deductibleRate != null">
        deductible_rate = #{record.deductibleRate,jdbcType=DECIMAL},
      </if>
      <if test="record.deductibleMoney != null">
        deductible_money = #{record.deductibleMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.insuranceFee != null">
        insurance_fee = #{record.insuranceFee,jdbcType=DECIMAL},
      </if>
      <if test="record.premiums != null">
        premiums = #{record.premiums,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.ext != null">
        ext = #{record.ext,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ce_insurance_item
    set id = #{record.id,jdbcType=BIGINT},
      regist_id = #{record.registId,jdbcType=BIGINT},
      insurance_id = #{record.insuranceId,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      insurance_amout = #{record.insuranceAmout,jdbcType=DECIMAL},
      unit_count = #{record.unitCount,jdbcType=INTEGER},
      unit_amount = #{record.unitAmount,jdbcType=DECIMAL},
      non_deductible = #{record.nonDeductible,jdbcType=VARCHAR},
      deductible_rate = #{record.deductibleRate,jdbcType=DECIMAL},
      deductible_money = #{record.deductibleMoney,jdbcType=DECIMAL},
      insurance_fee = #{record.insuranceFee,jdbcType=DECIMAL},
      premiums = #{record.premiums,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT},
      ext = #{record.ext,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.server.api.entity.CeInsuranceItem">
    update ce_insurance_item
    <set>
      <if test="registId != null">
        regist_id = #{registId,jdbcType=BIGINT},
      </if>
      <if test="insuranceId != null">
        insurance_id = #{insuranceId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="insuranceAmout != null">
        insurance_amout = #{insuranceAmout,jdbcType=DECIMAL},
      </if>
      <if test="unitCount != null">
        unit_count = #{unitCount,jdbcType=INTEGER},
      </if>
      <if test="unitAmount != null">
        unit_amount = #{unitAmount,jdbcType=DECIMAL},
      </if>
      <if test="nonDeductible != null">
        non_deductible = #{nonDeductible,jdbcType=VARCHAR},
      </if>
      <if test="deductibleRate != null">
        deductible_rate = #{deductibleRate,jdbcType=DECIMAL},
      </if>
      <if test="deductibleMoney != null">
        deductible_money = #{deductibleMoney,jdbcType=DECIMAL},
      </if>
      <if test="insuranceFee != null">
        insurance_fee = #{insuranceFee,jdbcType=DECIMAL},
      </if>
      <if test="premiums != null">
        premiums = #{premiums,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="ext != null">
        ext = #{ext,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.server.api.entity.CeInsuranceItem">
    update ce_insurance_item
    set regist_id = #{registId,jdbcType=BIGINT},
      insurance_id = #{insuranceId,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      insurance_amout = #{insuranceAmout,jdbcType=DECIMAL},
      unit_count = #{unitCount,jdbcType=INTEGER},
      unit_amount = #{unitAmount,jdbcType=DECIMAL},
      non_deductible = #{nonDeductible,jdbcType=VARCHAR},
      deductible_rate = #{deductibleRate,jdbcType=DECIMAL},
      deductible_money = #{deductibleMoney,jdbcType=DECIMAL},
      insurance_fee = #{insuranceFee,jdbcType=DECIMAL},
      premiums = #{premiums,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      ext = #{ext,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByBatchInstanceId" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ce_insurance_item
    where insurance_id in
    <foreach collection="list"  item="item" index="index" separator="," open="(" close=")">
      #{item,jdbcType=BIGINT}
    </foreach>
  </select>
</mapper>