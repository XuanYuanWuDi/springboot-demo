<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.server.provider.mapper.InjuredInvestigateHistoryMapper">
  <resultMap id="BaseResultMap" type="com.injured.server.api.entity.InjuredInvestigateHistory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="claim_notification_no" jdbcType="VARCHAR" property="claimNotificationNo" />
    <result column="regist_id" jdbcType="BIGINT" property="registId" />
    <result column="survey_wou_id" jdbcType="BIGINT" property="surveyWouId" />
    <result column="survey_id" jdbcType="BIGINT" property="surveyId" />
    <result column="med_basic_info_id" jdbcType="BIGINT" property="medBasicInfoId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="compant_code" jdbcType="VARCHAR" property="compantCode" />
    <result column="serial_num" jdbcType="INTEGER" property="serialNum" />
    <result column="count_investigations" jdbcType="INTEGER" property="countInvestigations" />
    <result column="investigator_name" jdbcType="VARCHAR" property="investigatorName" />
    <result column="investigator_no" jdbcType="VARCHAR" property="investigatorNo" />
    <result column="survey_reception_time" jdbcType="TIMESTAMP" property="surveyReceptionTime" />
    <result column="survey_submit_time" jdbcType="TIMESTAMP" property="surveySubmitTime" />
    <result column="adjust_type" jdbcType="INTEGER" property="adjustType" />
    <result column="reviewer" jdbcType="VARCHAR" property="reviewer" />
    <result column="reviewer_time" jdbcType="TIMESTAMP" property="reviewerTime" />
    <result column="human_injury" jdbcType="INTEGER" property="humanInjury" />
    <result column="reviewer_amount" jdbcType="DECIMAL" property="reviewerAmount" />
    <result column="reviewer_opinion" jdbcType="INTEGER" property="reviewerOpinion" />
    <result column="next_track_time" jdbcType="TIMESTAMP" property="nextTrackTime" />
    <result column="task_status" jdbcType="INTEGER" property="taskStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, claim_notification_no, regist_id, survey_wou_id, survey_id, med_basic_info_id, 
    company_id, compant_code, serial_num, count_investigations, investigator_name, investigator_no, 
    survey_reception_time, survey_submit_time, adjust_type, reviewer, reviewer_time, 
    human_injury, reviewer_amount, reviewer_opinion, next_track_time, task_status, create_time, 
    update_time, is_deleted, remark
  </sql>
  <select id="selectByExample" parameterType="com.injured.server.api.entity.InjuredInvestigateHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from injured_investigate_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from injured_investigate_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from injured_investigate_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.server.api.entity.InjuredInvestigateHistoryExample">
    delete from injured_investigate_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.server.api.entity.InjuredInvestigateHistory">
    insert into injured_investigate_history (id, claim_notification_no, regist_id, 
      survey_wou_id, survey_id, med_basic_info_id, 
      company_id, compant_code, serial_num, 
      count_investigations, investigator_name, 
      investigator_no, survey_reception_time, 
      survey_submit_time, adjust_type, reviewer, 
      reviewer_time, human_injury, reviewer_amount, 
      reviewer_opinion, next_track_time, task_status, 
      create_time, update_time, is_deleted, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{claimNotificationNo,jdbcType=VARCHAR}, #{registId,jdbcType=BIGINT}, 
      #{surveyWouId,jdbcType=BIGINT}, #{surveyId,jdbcType=BIGINT}, #{medBasicInfoId,jdbcType=BIGINT}, 
      #{companyId,jdbcType=BIGINT}, #{compantCode,jdbcType=VARCHAR}, #{serialNum,jdbcType=INTEGER}, 
      #{countInvestigations,jdbcType=INTEGER}, #{investigatorName,jdbcType=VARCHAR}, 
      #{investigatorNo,jdbcType=VARCHAR}, #{surveyReceptionTime,jdbcType=TIMESTAMP}, 
      #{surveySubmitTime,jdbcType=TIMESTAMP}, #{adjustType,jdbcType=INTEGER}, #{reviewer,jdbcType=VARCHAR}, 
      #{reviewerTime,jdbcType=TIMESTAMP}, #{humanInjury,jdbcType=INTEGER}, #{reviewerAmount,jdbcType=DECIMAL}, 
      #{reviewerOpinion,jdbcType=INTEGER}, #{nextTrackTime,jdbcType=TIMESTAMP}, #{taskStatus,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.injured.server.api.entity.InjuredInvestigateHistory">
    insert into injured_investigate_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="claimNotificationNo != null">
        claim_notification_no,
      </if>
      <if test="registId != null">
        regist_id,
      </if>
      <if test="surveyWouId != null">
        survey_wou_id,
      </if>
      <if test="surveyId != null">
        survey_id,
      </if>
      <if test="medBasicInfoId != null">
        med_basic_info_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="compantCode != null">
        compant_code,
      </if>
      <if test="serialNum != null">
        serial_num,
      </if>
      <if test="countInvestigations != null">
        count_investigations,
      </if>
      <if test="investigatorName != null">
        investigator_name,
      </if>
      <if test="investigatorNo != null">
        investigator_no,
      </if>
      <if test="surveyReceptionTime != null">
        survey_reception_time,
      </if>
      <if test="surveySubmitTime != null">
        survey_submit_time,
      </if>
      <if test="adjustType != null">
        adjust_type,
      </if>
      <if test="reviewer != null">
        reviewer,
      </if>
      <if test="reviewerTime != null">
        reviewer_time,
      </if>
      <if test="humanInjury != null">
        human_injury,
      </if>
      <if test="reviewerAmount != null">
        reviewer_amount,
      </if>
      <if test="reviewerOpinion != null">
        reviewer_opinion,
      </if>
      <if test="nextTrackTime != null">
        next_track_time,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="claimNotificationNo != null">
        #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="registId != null">
        #{registId,jdbcType=BIGINT},
      </if>
      <if test="surveyWouId != null">
        #{surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="surveyId != null">
        #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="medBasicInfoId != null">
        #{medBasicInfoId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="compantCode != null">
        #{compantCode,jdbcType=VARCHAR},
      </if>
      <if test="serialNum != null">
        #{serialNum,jdbcType=INTEGER},
      </if>
      <if test="countInvestigations != null">
        #{countInvestigations,jdbcType=INTEGER},
      </if>
      <if test="investigatorName != null">
        #{investigatorName,jdbcType=VARCHAR},
      </if>
      <if test="investigatorNo != null">
        #{investigatorNo,jdbcType=VARCHAR},
      </if>
      <if test="surveyReceptionTime != null">
        #{surveyReceptionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="surveySubmitTime != null">
        #{surveySubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adjustType != null">
        #{adjustType,jdbcType=INTEGER},
      </if>
      <if test="reviewer != null">
        #{reviewer,jdbcType=VARCHAR},
      </if>
      <if test="reviewerTime != null">
        #{reviewerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="humanInjury != null">
        #{humanInjury,jdbcType=INTEGER},
      </if>
      <if test="reviewerAmount != null">
        #{reviewerAmount,jdbcType=DECIMAL},
      </if>
      <if test="reviewerOpinion != null">
        #{reviewerOpinion,jdbcType=INTEGER},
      </if>
      <if test="nextTrackTime != null">
        #{nextTrackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.server.api.entity.InjuredInvestigateHistoryExample" resultType="java.lang.Long">
    select count(*) from injured_investigate_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update injured_investigate_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.claimNotificationNo != null">
        claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.registId != null">
        regist_id = #{record.registId,jdbcType=BIGINT},
      </if>
      <if test="record.surveyWouId != null">
        survey_wou_id = #{record.surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="record.surveyId != null">
        survey_id = #{record.surveyId,jdbcType=BIGINT},
      </if>
      <if test="record.medBasicInfoId != null">
        med_basic_info_id = #{record.medBasicInfoId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.compantCode != null">
        compant_code = #{record.compantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNum != null">
        serial_num = #{record.serialNum,jdbcType=INTEGER},
      </if>
      <if test="record.countInvestigations != null">
        count_investigations = #{record.countInvestigations,jdbcType=INTEGER},
      </if>
      <if test="record.investigatorName != null">
        investigator_name = #{record.investigatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.investigatorNo != null">
        investigator_no = #{record.investigatorNo,jdbcType=VARCHAR},
      </if>
      <if test="record.surveyReceptionTime != null">
        survey_reception_time = #{record.surveyReceptionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.surveySubmitTime != null">
        survey_submit_time = #{record.surveySubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adjustType != null">
        adjust_type = #{record.adjustType,jdbcType=INTEGER},
      </if>
      <if test="record.reviewer != null">
        reviewer = #{record.reviewer,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewerTime != null">
        reviewer_time = #{record.reviewerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.humanInjury != null">
        human_injury = #{record.humanInjury,jdbcType=INTEGER},
      </if>
      <if test="record.reviewerAmount != null">
        reviewer_amount = #{record.reviewerAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.reviewerOpinion != null">
        reviewer_opinion = #{record.reviewerOpinion,jdbcType=INTEGER},
      </if>
      <if test="record.nextTrackTime != null">
        next_track_time = #{record.nextTrackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskStatus != null">
        task_status = #{record.taskStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update injured_investigate_history
    set id = #{record.id,jdbcType=BIGINT},
      claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      regist_id = #{record.registId,jdbcType=BIGINT},
      survey_wou_id = #{record.surveyWouId,jdbcType=BIGINT},
      survey_id = #{record.surveyId,jdbcType=BIGINT},
      med_basic_info_id = #{record.medBasicInfoId,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      compant_code = #{record.compantCode,jdbcType=VARCHAR},
      serial_num = #{record.serialNum,jdbcType=INTEGER},
      count_investigations = #{record.countInvestigations,jdbcType=INTEGER},
      investigator_name = #{record.investigatorName,jdbcType=VARCHAR},
      investigator_no = #{record.investigatorNo,jdbcType=VARCHAR},
      survey_reception_time = #{record.surveyReceptionTime,jdbcType=TIMESTAMP},
      survey_submit_time = #{record.surveySubmitTime,jdbcType=TIMESTAMP},
      adjust_type = #{record.adjustType,jdbcType=INTEGER},
      reviewer = #{record.reviewer,jdbcType=VARCHAR},
      reviewer_time = #{record.reviewerTime,jdbcType=TIMESTAMP},
      human_injury = #{record.humanInjury,jdbcType=INTEGER},
      reviewer_amount = #{record.reviewerAmount,jdbcType=DECIMAL},
      reviewer_opinion = #{record.reviewerOpinion,jdbcType=INTEGER},
      next_track_time = #{record.nextTrackTime,jdbcType=TIMESTAMP},
      task_status = #{record.taskStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.server.api.entity.InjuredInvestigateHistory">
    update injured_investigate_history
    <set>
      <if test="claimNotificationNo != null">
        claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="registId != null">
        regist_id = #{registId,jdbcType=BIGINT},
      </if>
      <if test="surveyWouId != null">
        survey_wou_id = #{surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="surveyId != null">
        survey_id = #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="medBasicInfoId != null">
        med_basic_info_id = #{medBasicInfoId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="compantCode != null">
        compant_code = #{compantCode,jdbcType=VARCHAR},
      </if>
      <if test="serialNum != null">
        serial_num = #{serialNum,jdbcType=INTEGER},
      </if>
      <if test="countInvestigations != null">
        count_investigations = #{countInvestigations,jdbcType=INTEGER},
      </if>
      <if test="investigatorName != null">
        investigator_name = #{investigatorName,jdbcType=VARCHAR},
      </if>
      <if test="investigatorNo != null">
        investigator_no = #{investigatorNo,jdbcType=VARCHAR},
      </if>
      <if test="surveyReceptionTime != null">
        survey_reception_time = #{surveyReceptionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="surveySubmitTime != null">
        survey_submit_time = #{surveySubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adjustType != null">
        adjust_type = #{adjustType,jdbcType=INTEGER},
      </if>
      <if test="reviewer != null">
        reviewer = #{reviewer,jdbcType=VARCHAR},
      </if>
      <if test="reviewerTime != null">
        reviewer_time = #{reviewerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="humanInjury != null">
        human_injury = #{humanInjury,jdbcType=INTEGER},
      </if>
      <if test="reviewerAmount != null">
        reviewer_amount = #{reviewerAmount,jdbcType=DECIMAL},
      </if>
      <if test="reviewerOpinion != null">
        reviewer_opinion = #{reviewerOpinion,jdbcType=INTEGER},
      </if>
      <if test="nextTrackTime != null">
        next_track_time = #{nextTrackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.server.api.entity.InjuredInvestigateHistory">
    update injured_investigate_history
    set claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      regist_id = #{registId,jdbcType=BIGINT},
      survey_wou_id = #{surveyWouId,jdbcType=BIGINT},
      survey_id = #{surveyId,jdbcType=BIGINT},
      med_basic_info_id = #{medBasicInfoId,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      compant_code = #{compantCode,jdbcType=VARCHAR},
      serial_num = #{serialNum,jdbcType=INTEGER},
      count_investigations = #{countInvestigations,jdbcType=INTEGER},
      investigator_name = #{investigatorName,jdbcType=VARCHAR},
      investigator_no = #{investigatorNo,jdbcType=VARCHAR},
      survey_reception_time = #{surveyReceptionTime,jdbcType=TIMESTAMP},
      survey_submit_time = #{surveySubmitTime,jdbcType=TIMESTAMP},
      adjust_type = #{adjustType,jdbcType=INTEGER},
      reviewer = #{reviewer,jdbcType=VARCHAR},
      reviewer_time = #{reviewerTime,jdbcType=TIMESTAMP},
      human_injury = #{humanInjury,jdbcType=INTEGER},
      reviewer_amount = #{reviewerAmount,jdbcType=DECIMAL},
      reviewer_opinion = #{reviewerOpinion,jdbcType=INTEGER},
      next_track_time = #{nextTrackTime,jdbcType=TIMESTAMP},
      task_status = #{taskStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>