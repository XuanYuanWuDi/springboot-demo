<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.server.provider.mapper.InjuredEstimatedLossInfoMapper">
  <resultMap id="BaseResultMap" type="com.injured.server.api.entity.InjuredEstimatedLossInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="claim_notification_no" jdbcType="VARCHAR" property="claimNotificationNo" />
    <result column="regist_id" jdbcType="BIGINT" property="registId" />
    <result column="estimated_loss_id" jdbcType="BIGINT" property="estimatedLossId" />
    <result column="survey_id" jdbcType="BIGINT" property="surveyId" />
    <result column="survey_wou_id" jdbcType="BIGINT" property="surveyWouId" />
    <result column="compant_code" jdbcType="VARCHAR" property="compantCode" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="loss_item_type" jdbcType="BIGINT" property="lossItemType" />
    <result column="estimate_amount" jdbcType="DECIMAL" property="estimateAmount" />
    <result column="mediation_amount" jdbcType="DECIMAL" property="mediationAmount" />
    <result column="review_amount" jdbcType="DECIMAL" property="reviewAmount" />
    <result column="calculation_formula" jdbcType="VARCHAR" property="calculationFormula" />
    <result column="calculation_formula_id" jdbcType="BIGINT" property="calculationFormulaId" />
    <result column="serial_num" jdbcType="INTEGER" property="serialNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, claim_notification_no, regist_id, estimated_loss_id, survey_id, survey_wou_id, 
    compant_code, company_id, loss_item_type, estimate_amount, mediation_amount, review_amount, 
    calculation_formula, calculation_formula_id, serial_num, create_time, update_time, 
    is_deleted, remark
  </sql>
  <select id="selectByExample" parameterType="com.injured.server.api.entity.InjuredEstimatedLossInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from injured_estimated_loss_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from injured_estimated_loss_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from injured_estimated_loss_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.server.api.entity.InjuredEstimatedLossInfoExample">
    delete from injured_estimated_loss_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.server.api.entity.InjuredEstimatedLossInfo">
    insert into injured_estimated_loss_info (id, claim_notification_no, regist_id, 
      estimated_loss_id, survey_id, survey_wou_id, 
      compant_code, company_id, loss_item_type, 
      estimate_amount, mediation_amount, review_amount, 
      calculation_formula, calculation_formula_id, 
      serial_num, create_time, update_time, 
      is_deleted, remark)
    values (#{id,jdbcType=BIGINT}, #{claimNotificationNo,jdbcType=VARCHAR}, #{registId,jdbcType=BIGINT}, 
      #{estimatedLossId,jdbcType=BIGINT}, #{surveyId,jdbcType=BIGINT}, #{surveyWouId,jdbcType=BIGINT}, 
      #{compantCode,jdbcType=VARCHAR}, #{companyId,jdbcType=BIGINT}, #{lossItemType,jdbcType=BIGINT}, 
      #{estimateAmount,jdbcType=DECIMAL}, #{mediationAmount,jdbcType=DECIMAL}, #{reviewAmount,jdbcType=DECIMAL}, 
      #{calculationFormula,jdbcType=VARCHAR}, #{calculationFormulaId,jdbcType=BIGINT}, 
      #{serialNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.injured.server.api.entity.InjuredEstimatedLossInfo">
    insert into injured_estimated_loss_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="claimNotificationNo != null">
        claim_notification_no,
      </if>
      <if test="registId != null">
        regist_id,
      </if>
      <if test="estimatedLossId != null">
        estimated_loss_id,
      </if>
      <if test="surveyId != null">
        survey_id,
      </if>
      <if test="surveyWouId != null">
        survey_wou_id,
      </if>
      <if test="compantCode != null">
        compant_code,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="lossItemType != null">
        loss_item_type,
      </if>
      <if test="estimateAmount != null">
        estimate_amount,
      </if>
      <if test="mediationAmount != null">
        mediation_amount,
      </if>
      <if test="reviewAmount != null">
        review_amount,
      </if>
      <if test="calculationFormula != null">
        calculation_formula,
      </if>
      <if test="calculationFormulaId != null">
        calculation_formula_id,
      </if>
      <if test="serialNum != null">
        serial_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="claimNotificationNo != null">
        #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="registId != null">
        #{registId,jdbcType=BIGINT},
      </if>
      <if test="estimatedLossId != null">
        #{estimatedLossId,jdbcType=BIGINT},
      </if>
      <if test="surveyId != null">
        #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="surveyWouId != null">
        #{surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="compantCode != null">
        #{compantCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="lossItemType != null">
        #{lossItemType,jdbcType=BIGINT},
      </if>
      <if test="estimateAmount != null">
        #{estimateAmount,jdbcType=DECIMAL},
      </if>
      <if test="mediationAmount != null">
        #{mediationAmount,jdbcType=DECIMAL},
      </if>
      <if test="reviewAmount != null">
        #{reviewAmount,jdbcType=DECIMAL},
      </if>
      <if test="calculationFormula != null">
        #{calculationFormula,jdbcType=VARCHAR},
      </if>
      <if test="calculationFormulaId != null">
        #{calculationFormulaId,jdbcType=BIGINT},
      </if>
      <if test="serialNum != null">
        #{serialNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.server.api.entity.InjuredEstimatedLossInfoExample" resultType="java.lang.Long">
    select count(*) from injured_estimated_loss_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update injured_estimated_loss_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.claimNotificationNo != null">
        claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.registId != null">
        regist_id = #{record.registId,jdbcType=BIGINT},
      </if>
      <if test="record.estimatedLossId != null">
        estimated_loss_id = #{record.estimatedLossId,jdbcType=BIGINT},
      </if>
      <if test="record.surveyId != null">
        survey_id = #{record.surveyId,jdbcType=BIGINT},
      </if>
      <if test="record.surveyWouId != null">
        survey_wou_id = #{record.surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="record.compantCode != null">
        compant_code = #{record.compantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.lossItemType != null">
        loss_item_type = #{record.lossItemType,jdbcType=BIGINT},
      </if>
      <if test="record.estimateAmount != null">
        estimate_amount = #{record.estimateAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.mediationAmount != null">
        mediation_amount = #{record.mediationAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.reviewAmount != null">
        review_amount = #{record.reviewAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.calculationFormula != null">
        calculation_formula = #{record.calculationFormula,jdbcType=VARCHAR},
      </if>
      <if test="record.calculationFormulaId != null">
        calculation_formula_id = #{record.calculationFormulaId,jdbcType=BIGINT},
      </if>
      <if test="record.serialNum != null">
        serial_num = #{record.serialNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update injured_estimated_loss_info
    set id = #{record.id,jdbcType=BIGINT},
      claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      regist_id = #{record.registId,jdbcType=BIGINT},
      estimated_loss_id = #{record.estimatedLossId,jdbcType=BIGINT},
      survey_id = #{record.surveyId,jdbcType=BIGINT},
      survey_wou_id = #{record.surveyWouId,jdbcType=BIGINT},
      compant_code = #{record.compantCode,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=BIGINT},
      loss_item_type = #{record.lossItemType,jdbcType=BIGINT},
      estimate_amount = #{record.estimateAmount,jdbcType=DECIMAL},
      mediation_amount = #{record.mediationAmount,jdbcType=DECIMAL},
      review_amount = #{record.reviewAmount,jdbcType=DECIMAL},
      calculation_formula = #{record.calculationFormula,jdbcType=VARCHAR},
      calculation_formula_id = #{record.calculationFormulaId,jdbcType=BIGINT},
      serial_num = #{record.serialNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.server.api.entity.InjuredEstimatedLossInfo">
    update injured_estimated_loss_info
    <set>
      <if test="claimNotificationNo != null">
        claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="registId != null">
        regist_id = #{registId,jdbcType=BIGINT},
      </if>
      <if test="estimatedLossId != null">
        estimated_loss_id = #{estimatedLossId,jdbcType=BIGINT},
      </if>
      <if test="surveyId != null">
        survey_id = #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="surveyWouId != null">
        survey_wou_id = #{surveyWouId,jdbcType=BIGINT},
      </if>
      <if test="compantCode != null">
        compant_code = #{compantCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="lossItemType != null">
        loss_item_type = #{lossItemType,jdbcType=BIGINT},
      </if>
      <if test="estimateAmount != null">
        estimate_amount = #{estimateAmount,jdbcType=DECIMAL},
      </if>
      <if test="mediationAmount != null">
        mediation_amount = #{mediationAmount,jdbcType=DECIMAL},
      </if>
      <if test="reviewAmount != null">
        review_amount = #{reviewAmount,jdbcType=DECIMAL},
      </if>
      <if test="calculationFormula != null">
        calculation_formula = #{calculationFormula,jdbcType=VARCHAR},
      </if>
      <if test="calculationFormulaId != null">
        calculation_formula_id = #{calculationFormulaId,jdbcType=BIGINT},
      </if>
      <if test="serialNum != null">
        serial_num = #{serialNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.server.api.entity.InjuredEstimatedLossInfo">
    update injured_estimated_loss_info
    set claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      regist_id = #{registId,jdbcType=BIGINT},
      estimated_loss_id = #{estimatedLossId,jdbcType=BIGINT},
      survey_id = #{surveyId,jdbcType=BIGINT},
      survey_wou_id = #{surveyWouId,jdbcType=BIGINT},
      compant_code = #{compantCode,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=BIGINT},
      loss_item_type = #{lossItemType,jdbcType=BIGINT},
      estimate_amount = #{estimateAmount,jdbcType=DECIMAL},
      mediation_amount = #{mediationAmount,jdbcType=DECIMAL},
      review_amount = #{reviewAmount,jdbcType=DECIMAL},
      calculation_formula = #{calculationFormula,jdbcType=VARCHAR},
      calculation_formula_id = #{calculationFormulaId,jdbcType=BIGINT},
      serial_num = #{serialNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>