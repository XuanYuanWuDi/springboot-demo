<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.server.provider.mapper.InjuredFixedLossListMapper">
  <resultMap id="BaseResultMap" type="com.injured.server.api.entity.InjuredFixedLossList">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="claim_notification_no" jdbcType="VARCHAR" property="claimNotificationNo" />
    <result column="regist_id" jdbcType="BIGINT" property="registId" />
    <result column="serial_num" jdbcType="INTEGER" property="serialNum" />
    <result column="fixed_damage_id" jdbcType="BIGINT" property="fixedDamageId" />
    <result column="info_id" jdbcType="BIGINT" property="infoId" />
    <result column="survey_id" jdbcType="BIGINT" property="surveyId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="compant_code" jdbcType="VARCHAR" property="compantCode" />
    <result column="damages_num" jdbcType="INTEGER" property="damagesNum" />
    <result column="loss_type" jdbcType="TINYINT" property="lossType" />
    <result column="injury_loss_item_type" jdbcType="VARCHAR" property="injuryLossItemType" />
    <result column="injury_loss_item_id" jdbcType="BIGINT" property="injuryLossItemId" />
    <result column="calculat_formula_info" jdbcType="VARCHAR" property="calculatFormulaInfo" />
    <result column="calculat_formula_id" jdbcType="BIGINT" property="calculatFormulaId" />
    <result column="report_loss_amount" jdbcType="DECIMAL" property="reportLossAmount" />
    <result column="adjust_amount" jdbcType="DECIMAL" property="adjustAmount" />
    <result column="fixed_loss_amount" jdbcType="DECIMAL" property="fixedLossAmount" />
    <result column="damage_amount" jdbcType="DECIMAL" property="damageAmount" />
    <result column="addit_reason" jdbcType="DECIMAL" property="additReason" />
    <result column="adjust_instruct" jdbcType="VARCHAR" property="adjustInstruct" />
    <result column="fixed_loss_type_first" jdbcType="BIGINT" property="fixedLossTypeFirst" />
    <result column="fixed_loss_type_second" jdbcType="BIGINT" property="fixedLossTypeSecond" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, claim_notification_no, regist_id, serial_num, fixed_damage_id, info_id, survey_id, 
    company_id, compant_code, damages_num, loss_type, injury_loss_item_type, injury_loss_item_id, 
    calculat_formula_info, calculat_formula_id, report_loss_amount, adjust_amount, fixed_loss_amount, 
    damage_amount, addit_reason, adjust_instruct, fixed_loss_type_first, fixed_loss_type_second, 
    remark, create_time, update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.injured.server.api.entity.InjuredFixedLossListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from injured_fixed_loss_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from injured_fixed_loss_list
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from injured_fixed_loss_list
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.server.api.entity.InjuredFixedLossListExample">
    delete from injured_fixed_loss_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.server.api.entity.InjuredFixedLossList">
    insert into injured_fixed_loss_list (id, claim_notification_no, regist_id, 
      serial_num, fixed_damage_id, info_id, 
      survey_id, company_id, compant_code, 
      damages_num, loss_type, injury_loss_item_type, 
      injury_loss_item_id, calculat_formula_info, calculat_formula_id, 
      report_loss_amount, adjust_amount, fixed_loss_amount, 
      damage_amount, addit_reason, adjust_instruct, 
      fixed_loss_type_first, fixed_loss_type_second, 
      remark, create_time, update_time, 
      is_deleted)
    values (#{id,jdbcType=BIGINT}, #{claimNotificationNo,jdbcType=VARCHAR}, #{registId,jdbcType=BIGINT}, 
      #{serialNum,jdbcType=INTEGER}, #{fixedDamageId,jdbcType=BIGINT}, #{infoId,jdbcType=BIGINT}, 
      #{surveyId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{compantCode,jdbcType=VARCHAR}, 
      #{damagesNum,jdbcType=INTEGER}, #{lossType,jdbcType=TINYINT}, #{injuryLossItemType,jdbcType=VARCHAR}, 
      #{injuryLossItemId,jdbcType=BIGINT}, #{calculatFormulaInfo,jdbcType=VARCHAR}, #{calculatFormulaId,jdbcType=BIGINT}, 
      #{reportLossAmount,jdbcType=DECIMAL}, #{adjustAmount,jdbcType=DECIMAL}, #{fixedLossAmount,jdbcType=DECIMAL}, 
      #{damageAmount,jdbcType=DECIMAL}, #{additReason,jdbcType=DECIMAL}, #{adjustInstruct,jdbcType=VARCHAR}, 
      #{fixedLossTypeFirst,jdbcType=BIGINT}, #{fixedLossTypeSecond,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.injured.server.api.entity.InjuredFixedLossList">
    insert into injured_fixed_loss_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="claimNotificationNo != null">
        claim_notification_no,
      </if>
      <if test="registId != null">
        regist_id,
      </if>
      <if test="serialNum != null">
        serial_num,
      </if>
      <if test="fixedDamageId != null">
        fixed_damage_id,
      </if>
      <if test="infoId != null">
        info_id,
      </if>
      <if test="surveyId != null">
        survey_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="compantCode != null">
        compant_code,
      </if>
      <if test="damagesNum != null">
        damages_num,
      </if>
      <if test="lossType != null">
        loss_type,
      </if>
      <if test="injuryLossItemType != null">
        injury_loss_item_type,
      </if>
      <if test="injuryLossItemId != null">
        injury_loss_item_id,
      </if>
      <if test="calculatFormulaInfo != null">
        calculat_formula_info,
      </if>
      <if test="calculatFormulaId != null">
        calculat_formula_id,
      </if>
      <if test="reportLossAmount != null">
        report_loss_amount,
      </if>
      <if test="adjustAmount != null">
        adjust_amount,
      </if>
      <if test="fixedLossAmount != null">
        fixed_loss_amount,
      </if>
      <if test="damageAmount != null">
        damage_amount,
      </if>
      <if test="additReason != null">
        addit_reason,
      </if>
      <if test="adjustInstruct != null">
        adjust_instruct,
      </if>
      <if test="fixedLossTypeFirst != null">
        fixed_loss_type_first,
      </if>
      <if test="fixedLossTypeSecond != null">
        fixed_loss_type_second,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="claimNotificationNo != null">
        #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="registId != null">
        #{registId,jdbcType=BIGINT},
      </if>
      <if test="serialNum != null">
        #{serialNum,jdbcType=INTEGER},
      </if>
      <if test="fixedDamageId != null">
        #{fixedDamageId,jdbcType=BIGINT},
      </if>
      <if test="infoId != null">
        #{infoId,jdbcType=BIGINT},
      </if>
      <if test="surveyId != null">
        #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="compantCode != null">
        #{compantCode,jdbcType=VARCHAR},
      </if>
      <if test="damagesNum != null">
        #{damagesNum,jdbcType=INTEGER},
      </if>
      <if test="lossType != null">
        #{lossType,jdbcType=TINYINT},
      </if>
      <if test="injuryLossItemType != null">
        #{injuryLossItemType,jdbcType=VARCHAR},
      </if>
      <if test="injuryLossItemId != null">
        #{injuryLossItemId,jdbcType=BIGINT},
      </if>
      <if test="calculatFormulaInfo != null">
        #{calculatFormulaInfo,jdbcType=VARCHAR},
      </if>
      <if test="calculatFormulaId != null">
        #{calculatFormulaId,jdbcType=BIGINT},
      </if>
      <if test="reportLossAmount != null">
        #{reportLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="adjustAmount != null">
        #{adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="fixedLossAmount != null">
        #{fixedLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="damageAmount != null">
        #{damageAmount,jdbcType=DECIMAL},
      </if>
      <if test="additReason != null">
        #{additReason,jdbcType=DECIMAL},
      </if>
      <if test="adjustInstruct != null">
        #{adjustInstruct,jdbcType=VARCHAR},
      </if>
      <if test="fixedLossTypeFirst != null">
        #{fixedLossTypeFirst,jdbcType=BIGINT},
      </if>
      <if test="fixedLossTypeSecond != null">
        #{fixedLossTypeSecond,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.server.api.entity.InjuredFixedLossListExample" resultType="java.lang.Long">
    select count(*) from injured_fixed_loss_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update injured_fixed_loss_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.claimNotificationNo != null">
        claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.registId != null">
        regist_id = #{record.registId,jdbcType=BIGINT},
      </if>
      <if test="record.serialNum != null">
        serial_num = #{record.serialNum,jdbcType=INTEGER},
      </if>
      <if test="record.fixedDamageId != null">
        fixed_damage_id = #{record.fixedDamageId,jdbcType=BIGINT},
      </if>
      <if test="record.infoId != null">
        info_id = #{record.infoId,jdbcType=BIGINT},
      </if>
      <if test="record.surveyId != null">
        survey_id = #{record.surveyId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.compantCode != null">
        compant_code = #{record.compantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.damagesNum != null">
        damages_num = #{record.damagesNum,jdbcType=INTEGER},
      </if>
      <if test="record.lossType != null">
        loss_type = #{record.lossType,jdbcType=TINYINT},
      </if>
      <if test="record.injuryLossItemType != null">
        injury_loss_item_type = #{record.injuryLossItemType,jdbcType=VARCHAR},
      </if>
      <if test="record.injuryLossItemId != null">
        injury_loss_item_id = #{record.injuryLossItemId,jdbcType=BIGINT},
      </if>
      <if test="record.calculatFormulaInfo != null">
        calculat_formula_info = #{record.calculatFormulaInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.calculatFormulaId != null">
        calculat_formula_id = #{record.calculatFormulaId,jdbcType=BIGINT},
      </if>
      <if test="record.reportLossAmount != null">
        report_loss_amount = #{record.reportLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.adjustAmount != null">
        adjust_amount = #{record.adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.fixedLossAmount != null">
        fixed_loss_amount = #{record.fixedLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.damageAmount != null">
        damage_amount = #{record.damageAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.additReason != null">
        addit_reason = #{record.additReason,jdbcType=DECIMAL},
      </if>
      <if test="record.adjustInstruct != null">
        adjust_instruct = #{record.adjustInstruct,jdbcType=VARCHAR},
      </if>
      <if test="record.fixedLossTypeFirst != null">
        fixed_loss_type_first = #{record.fixedLossTypeFirst,jdbcType=BIGINT},
      </if>
      <if test="record.fixedLossTypeSecond != null">
        fixed_loss_type_second = #{record.fixedLossTypeSecond,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update injured_fixed_loss_list
    set id = #{record.id,jdbcType=BIGINT},
      claim_notification_no = #{record.claimNotificationNo,jdbcType=VARCHAR},
      regist_id = #{record.registId,jdbcType=BIGINT},
      serial_num = #{record.serialNum,jdbcType=INTEGER},
      fixed_damage_id = #{record.fixedDamageId,jdbcType=BIGINT},
      info_id = #{record.infoId,jdbcType=BIGINT},
      survey_id = #{record.surveyId,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      compant_code = #{record.compantCode,jdbcType=VARCHAR},
      damages_num = #{record.damagesNum,jdbcType=INTEGER},
      loss_type = #{record.lossType,jdbcType=TINYINT},
      injury_loss_item_type = #{record.injuryLossItemType,jdbcType=VARCHAR},
      injury_loss_item_id = #{record.injuryLossItemId,jdbcType=BIGINT},
      calculat_formula_info = #{record.calculatFormulaInfo,jdbcType=VARCHAR},
      calculat_formula_id = #{record.calculatFormulaId,jdbcType=BIGINT},
      report_loss_amount = #{record.reportLossAmount,jdbcType=DECIMAL},
      adjust_amount = #{record.adjustAmount,jdbcType=DECIMAL},
      fixed_loss_amount = #{record.fixedLossAmount,jdbcType=DECIMAL},
      damage_amount = #{record.damageAmount,jdbcType=DECIMAL},
      addit_reason = #{record.additReason,jdbcType=DECIMAL},
      adjust_instruct = #{record.adjustInstruct,jdbcType=VARCHAR},
      fixed_loss_type_first = #{record.fixedLossTypeFirst,jdbcType=BIGINT},
      fixed_loss_type_second = #{record.fixedLossTypeSecond,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.server.api.entity.InjuredFixedLossList">
    update injured_fixed_loss_list
    <set>
      <if test="claimNotificationNo != null">
        claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      </if>
      <if test="registId != null">
        regist_id = #{registId,jdbcType=BIGINT},
      </if>
      <if test="serialNum != null">
        serial_num = #{serialNum,jdbcType=INTEGER},
      </if>
      <if test="fixedDamageId != null">
        fixed_damage_id = #{fixedDamageId,jdbcType=BIGINT},
      </if>
      <if test="infoId != null">
        info_id = #{infoId,jdbcType=BIGINT},
      </if>
      <if test="surveyId != null">
        survey_id = #{surveyId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="compantCode != null">
        compant_code = #{compantCode,jdbcType=VARCHAR},
      </if>
      <if test="damagesNum != null">
        damages_num = #{damagesNum,jdbcType=INTEGER},
      </if>
      <if test="lossType != null">
        loss_type = #{lossType,jdbcType=TINYINT},
      </if>
      <if test="injuryLossItemType != null">
        injury_loss_item_type = #{injuryLossItemType,jdbcType=VARCHAR},
      </if>
      <if test="injuryLossItemId != null">
        injury_loss_item_id = #{injuryLossItemId,jdbcType=BIGINT},
      </if>
      <if test="calculatFormulaInfo != null">
        calculat_formula_info = #{calculatFormulaInfo,jdbcType=VARCHAR},
      </if>
      <if test="calculatFormulaId != null">
        calculat_formula_id = #{calculatFormulaId,jdbcType=BIGINT},
      </if>
      <if test="reportLossAmount != null">
        report_loss_amount = #{reportLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="adjustAmount != null">
        adjust_amount = #{adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="fixedLossAmount != null">
        fixed_loss_amount = #{fixedLossAmount,jdbcType=DECIMAL},
      </if>
      <if test="damageAmount != null">
        damage_amount = #{damageAmount,jdbcType=DECIMAL},
      </if>
      <if test="additReason != null">
        addit_reason = #{additReason,jdbcType=DECIMAL},
      </if>
      <if test="adjustInstruct != null">
        adjust_instruct = #{adjustInstruct,jdbcType=VARCHAR},
      </if>
      <if test="fixedLossTypeFirst != null">
        fixed_loss_type_first = #{fixedLossTypeFirst,jdbcType=BIGINT},
      </if>
      <if test="fixedLossTypeSecond != null">
        fixed_loss_type_second = #{fixedLossTypeSecond,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.server.api.entity.InjuredFixedLossList">
    update injured_fixed_loss_list
    set claim_notification_no = #{claimNotificationNo,jdbcType=VARCHAR},
      regist_id = #{registId,jdbcType=BIGINT},
      serial_num = #{serialNum,jdbcType=INTEGER},
      fixed_damage_id = #{fixedDamageId,jdbcType=BIGINT},
      info_id = #{infoId,jdbcType=BIGINT},
      survey_id = #{surveyId,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      compant_code = #{compantCode,jdbcType=VARCHAR},
      damages_num = #{damagesNum,jdbcType=INTEGER},
      loss_type = #{lossType,jdbcType=TINYINT},
      injury_loss_item_type = #{injuryLossItemType,jdbcType=VARCHAR},
      injury_loss_item_id = #{injuryLossItemId,jdbcType=BIGINT},
      calculat_formula_info = #{calculatFormulaInfo,jdbcType=VARCHAR},
      calculat_formula_id = #{calculatFormulaId,jdbcType=BIGINT},
      report_loss_amount = #{reportLossAmount,jdbcType=DECIMAL},
      adjust_amount = #{adjustAmount,jdbcType=DECIMAL},
      fixed_loss_amount = #{fixedLossAmount,jdbcType=DECIMAL},
      damage_amount = #{damageAmount,jdbcType=DECIMAL},
      addit_reason = #{additReason,jdbcType=DECIMAL},
      adjust_instruct = #{adjustInstruct,jdbcType=VARCHAR},
      fixed_loss_type_first = #{fixedLossTypeFirst,jdbcType=BIGINT},
      fixed_loss_type_second = #{fixedLossTypeSecond,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <insert id="insertBatch" parameterType="java.util.List">
    insert into injured_fixed_loss_list (claim_notification_no, regist_id, 
      serial_num, fixed_damage_id, info_id, 
      survey_id, company_id, compant_code, 
      damages_num, loss_type, injury_loss_item_type, 
      injury_loss_item_id, calculat_formula_info, calculat_formula_id, 
      report_loss_amount, adjust_amount, fixed_loss_amount, 
      damage_amount, addit_reason, adjust_instruct, 
      fixed_loss_type_first, fixed_loss_type_second, 
      remark, create_time, update_time, 
      is_deleted)
    values 
     <foreach collection="list" item="item" separator=",">
    (#{item.claimNotificationNo,jdbcType=VARCHAR}, #{item.registId,jdbcType=BIGINT}, 
      #{item.serialNum,jdbcType=INTEGER}, #{item.fixedDamageId,jdbcType=BIGINT}, #{item.infoId,jdbcType=BIGINT}, 
      #{item.surveyId,jdbcType=BIGINT}, #{item.companyId,jdbcType=BIGINT}, #{item.compantCode,jdbcType=VARCHAR}, 
      #{item.damagesNum,jdbcType=INTEGER}, #{item.lossType,jdbcType=TINYINT}, #{item.injuryLossItemType,jdbcType=VARCHAR}, 
      #{item.injuryLossItemId,jdbcType=BIGINT}, #{item.calculatFormulaInfo,jdbcType=VARCHAR}, #{item.calculatFormulaId,jdbcType=BIGINT}, 
      #{item.reportLossAmount,jdbcType=DECIMAL}, #{item.adjustAmount,jdbcType=DECIMAL}, #{item.fixedLossAmount,jdbcType=DECIMAL}, 
      #{item.damageAmount,jdbcType=DECIMAL}, #{item.additReason,jdbcType=DECIMAL}, #{item.adjustInstruct,jdbcType=VARCHAR}, 
      #{item.fixedLossTypeFirst,jdbcType=BIGINT}, #{item.fixedLossTypeSecond,jdbcType=BIGINT}, 
      #{item.remark,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
      #{item.isDeleted,jdbcType=TINYINT})
      </foreach>
  </insert>
</mapper>