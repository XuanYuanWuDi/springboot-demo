<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.injured.project.system.agencyLevel.mapper.CompanyAgencyUnderMapper">
  <resultMap id="BaseResultMap" type="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="agency_id" jdbcType="BIGINT" property="agencyId" />
    <result column="menu_id" jdbcType="BIGINT" property="menuId" />
    <result column="under_level" jdbcType="TINYINT" property="underLevel" />
    <result column="company_id" jdbcType="TINYINT" property="companyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, agency_id, menu_id, under_level, company_id
  </sql>
  <select id="selectByExample" parameterType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company_agency_under
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company_agency_under
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from company_agency_under
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnderExample">
    delete from company_agency_under
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnder">
    insert into company_agency_under (id, agency_id, menu_id, 
      under_level,company_id)
    values (#{id,jdbcType=BIGINT}, #{agencyId,jdbcType=BIGINT}, #{menuId,jdbcType=BIGINT}, 
      #{underLevel,jdbcType=TINYINT},#{companyId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnder" useGeneratedKeys="true" keyProperty="id">
    insert into company_agency_under
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agencyId != null">
        agency_id,
      </if>
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="underLevel != null">
        under_level,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="agencyId != null">
        #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="menuId != null">
        #{menuId,jdbcType=BIGINT},
      </if>
      <if test="underLevel != null">
        #{underLevel,jdbcType=TINYINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnderExample" resultType="java.lang.Long">
    select count(*) from company_agency_under
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update company_agency_under
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.agencyId != null">
        agency_id = #{record.agencyId,jdbcType=BIGINT},
      </if>
      <if test="record.menuId != null">
        menu_id = #{record.menuId,jdbcType=BIGINT},
      </if>
      <if test="record.underLevel != null">
        under_level = #{record.underLevel,jdbcType=TINYINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update company_agency_under
    set id = #{record.id,jdbcType=BIGINT},
      agency_id = #{record.agencyId,jdbcType=BIGINT},
      menu_id = #{record.menuId,jdbcType=BIGINT},
      under_level = #{record.underLevel,jdbcType=TINYINT},
      company_id = #{record.companyId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnder">
    update company_agency_under
    <set>
      <if test="agencyId != null">
        agency_id = #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="menuId != null">
        menu_id = #{menuId,jdbcType=BIGINT},
      </if>
      <if test="underLevel != null">
        under_level = #{underLevel,jdbcType=TINYINT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnder">
    update company_agency_under
    set agency_id = #{agencyId,jdbcType=BIGINT},
      menu_id = #{menuId,jdbcType=BIGINT},
      under_level = #{underLevel,jdbcType=TINYINT},
      company_id = #{companyId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <select id="selectAgencyLevel" resultType="java.lang.Integer">
    select 
    	under_level
    from company_agency_under
    where agency_id = #{id} and menu_id in
     <foreach item="item" collection="menuIds" separator="," open="(" close=")" index="">
       #{item, jdbcType=BIGINT}
     </foreach>
  </select>
  
  <update id="updateAgencyLevel" parameterType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnder">
       update company_agency_under 
        set under_level=#{underLevel,jdbcType=TINYINT}
        where agency_id= #{agencyId,jdbcType=BIGINT} and menu_id= #{menuId,jdbcType=BIGINT}
  </update>
  <select id="selectAgencyLevelByCompany" resultType="com.injured.project.system.agencyLevel.domain.CompanyAgencyUnder">
    select 
    <include refid="Base_Column_List" />
    from company_agency_under
    where company_id = #{companyId,jdbcType=BIGINT}
  </select>
</mapper>